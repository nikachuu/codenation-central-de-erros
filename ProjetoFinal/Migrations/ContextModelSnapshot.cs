// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal.Models;

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoFinal.Models.Ambiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeAmbiente")
                        .IsRequired()
                        .HasColumnName("ambiente")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ambiente");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Erro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnName("ambiente_id");

                    b.Property<bool>("Arquivado")
                        .HasColumnName("arquivado");

                    b.Property<string>("Coletado")
                        .IsRequired()
                        .HasColumnName("coletado")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Data")
                        .HasColumnName("data");

                    b.Property<string>("Descricoes")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasMaxLength(100);

                    b.Property<int>("EventoId")
                        .HasColumnName("evento_id");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasMaxLength(100);

                    b.Property<int>("NivelId")
                        .HasColumnName("nivel_id");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("NivelId");

                    b.ToTable("erro");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeNivel")
                        .IsRequired()
                        .HasColumnName("nivel")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("nivel");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("senha")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Erro", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Ambiente", "Ambientes")
                        .WithMany("Erros")
                        .HasForeignKey("AmbienteId")
                        .HasConstraintName("FK_erro_ambiente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoFinal.Models.Nivel", "Niveis")
                        .WithMany("Erros")
                        .HasForeignKey("NivelId")
                        .HasConstraintName("FK_erro_nivel")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
